<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: temporal/api/history/v1/message.proto

namespace Temporal\Api\History\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>temporal.api.history.v1.ActivityTaskStartedEventAttributes</code>
 */
class ActivityTaskStartedEventAttributes extends \Google\Protobuf\Internal\Message
{
    /**
     * The id of the `ACTIVITY_TASK_SCHEDULED` event this task corresponds to
     *
     * Generated from protobuf field <code>int64 scheduled_event_id = 1;</code>
     */
    protected $scheduled_event_id = 0;
    /**
     * id of the worker that picked up this task
     *
     * Generated from protobuf field <code>string identity = 2;</code>
     */
    protected $identity = '';
    /**
     * TODO ??
     *
     * Generated from protobuf field <code>string request_id = 3;</code>
     */
    protected $request_id = '';
    /**
     * Starting at 1, the number of times this task has been attempted
     *
     * Generated from protobuf field <code>int32 attempt = 4;</code>
     */
    protected $attempt = 0;
    /**
     * Will be set to the most recent failure details, if this task has previously failed and then
     * been retried.
     *
     * Generated from protobuf field <code>.temporal.api.failure.v1.Failure last_failure = 5;</code>
     */
    protected $last_failure = null;
    /**
     * Version info of the worker to whom this task was dispatched.
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.WorkerVersionStamp worker_version = 6;</code>
     */
    protected $worker_version = null;
    /**
     * Used by server internally to properly reapply build ID redirects to an execution
     * when rebuilding it from events.
     *
     * Generated from protobuf field <code>int64 build_id_redirect_counter = 7;</code>
     */
    protected $build_id_redirect_counter = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $scheduled_event_id
     *           The id of the `ACTIVITY_TASK_SCHEDULED` event this task corresponds to
     *     @type string $identity
     *           id of the worker that picked up this task
     *     @type string $request_id
     *           TODO ??
     *     @type int $attempt
     *           Starting at 1, the number of times this task has been attempted
     *     @type \Temporal\Api\Failure\V1\Failure $last_failure
     *           Will be set to the most recent failure details, if this task has previously failed and then
     *           been retried.
     *     @type \Temporal\Api\Common\V1\WorkerVersionStamp $worker_version
     *           Version info of the worker to whom this task was dispatched.
     *     @type int|string $build_id_redirect_counter
     *           Used by server internally to properly reapply build ID redirects to an execution
     *           when rebuilding it from events.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Temporal\Api\History\V1\Message::initOnce();
        parent::__construct($data);
    }

    /**
     * The id of the `ACTIVITY_TASK_SCHEDULED` event this task corresponds to
     *
     * Generated from protobuf field <code>int64 scheduled_event_id = 1;</code>
     * @return int|string
     */
    public function getScheduledEventId()
    {
        return $this->scheduled_event_id;
    }

    /**
     * The id of the `ACTIVITY_TASK_SCHEDULED` event this task corresponds to
     *
     * Generated from protobuf field <code>int64 scheduled_event_id = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setScheduledEventId($var)
    {
        GPBUtil::checkInt64($var);
        $this->scheduled_event_id = $var;

        return $this;
    }

    /**
     * id of the worker that picked up this task
     *
     * Generated from protobuf field <code>string identity = 2;</code>
     * @return string
     */
    public function getIdentity()
    {
        return $this->identity;
    }

    /**
     * id of the worker that picked up this task
     *
     * Generated from protobuf field <code>string identity = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setIdentity($var)
    {
        GPBUtil::checkString($var, True);
        $this->identity = $var;

        return $this;
    }

    /**
     * TODO ??
     *
     * Generated from protobuf field <code>string request_id = 3;</code>
     * @return string
     */
    public function getRequestId()
    {
        return $this->request_id;
    }

    /**
     * TODO ??
     *
     * Generated from protobuf field <code>string request_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->request_id = $var;

        return $this;
    }

    /**
     * Starting at 1, the number of times this task has been attempted
     *
     * Generated from protobuf field <code>int32 attempt = 4;</code>
     * @return int
     */
    public function getAttempt()
    {
        return $this->attempt;
    }

    /**
     * Starting at 1, the number of times this task has been attempted
     *
     * Generated from protobuf field <code>int32 attempt = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setAttempt($var)
    {
        GPBUtil::checkInt32($var);
        $this->attempt = $var;

        return $this;
    }

    /**
     * Will be set to the most recent failure details, if this task has previously failed and then
     * been retried.
     *
     * Generated from protobuf field <code>.temporal.api.failure.v1.Failure last_failure = 5;</code>
     * @return \Temporal\Api\Failure\V1\Failure|null
     */
    public function getLastFailure()
    {
        return $this->last_failure;
    }

    public function hasLastFailure()
    {
        return isset($this->last_failure);
    }

    public function clearLastFailure()
    {
        unset($this->last_failure);
    }

    /**
     * Will be set to the most recent failure details, if this task has previously failed and then
     * been retried.
     *
     * Generated from protobuf field <code>.temporal.api.failure.v1.Failure last_failure = 5;</code>
     * @param \Temporal\Api\Failure\V1\Failure $var
     * @return $this
     */
    public function setLastFailure($var)
    {
        GPBUtil::checkMessage($var, \Temporal\Api\Failure\V1\Failure::class);
        $this->last_failure = $var;

        return $this;
    }

    /**
     * Version info of the worker to whom this task was dispatched.
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.WorkerVersionStamp worker_version = 6;</code>
     * @return \Temporal\Api\Common\V1\WorkerVersionStamp|null
     */
    public function getWorkerVersion()
    {
        return $this->worker_version;
    }

    public function hasWorkerVersion()
    {
        return isset($this->worker_version);
    }

    public function clearWorkerVersion()
    {
        unset($this->worker_version);
    }

    /**
     * Version info of the worker to whom this task was dispatched.
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.WorkerVersionStamp worker_version = 6;</code>
     * @param \Temporal\Api\Common\V1\WorkerVersionStamp $var
     * @return $this
     */
    public function setWorkerVersion($var)
    {
        GPBUtil::checkMessage($var, \Temporal\Api\Common\V1\WorkerVersionStamp::class);
        $this->worker_version = $var;

        return $this;
    }

    /**
     * Used by server internally to properly reapply build ID redirects to an execution
     * when rebuilding it from events.
     *
     * Generated from protobuf field <code>int64 build_id_redirect_counter = 7;</code>
     * @return int|string
     */
    public function getBuildIdRedirectCounter()
    {
        return $this->build_id_redirect_counter;
    }

    /**
     * Used by server internally to properly reapply build ID redirects to an execution
     * when rebuilding it from events.
     *
     * Generated from protobuf field <code>int64 build_id_redirect_counter = 7;</code>
     * @param int|string $var
     * @return $this
     */
    public function setBuildIdRedirectCounter($var)
    {
        GPBUtil::checkInt64($var);
        $this->build_id_redirect_counter = $var;

        return $this;
    }

}

