<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: centrifugo/proxy/v1/proxy.proto

namespace RoadRunner\Centrifugal\Proxy\DTO\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>centrifugal.centrifugo.proxy.StreamSubscribeRequest</code>
 */
class StreamSubscribeRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Centrifugo always sends this within the first message upon user subscription request.
     * It's always not set in the following StreamRequest messages from Centrifugo.
     *
     * Generated from protobuf field <code>.centrifugal.centrifugo.proxy.SubscribeRequest subscribe_request = 1;</code>
     */
    protected $subscribe_request = null;
    /**
     * Publication may be set when client publishes to the on-demand stream. If you are using
     * bidirectional stream then Centrifugo assumes publications from client-side are allowed.
     *
     * Generated from protobuf field <code>.centrifugal.centrifugo.proxy.Publication publication = 2;</code>
     */
    protected $publication = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \RoadRunner\Centrifugal\Proxy\DTO\V1\SubscribeRequest $subscribe_request
     *           Centrifugo always sends this within the first message upon user subscription request.
     *           It's always not set in the following StreamRequest messages from Centrifugo.
     *     @type \RoadRunner\Centrifugal\Proxy\DTO\V1\Publication $publication
     *           Publication may be set when client publishes to the on-demand stream. If you are using
     *           bidirectional stream then Centrifugo assumes publications from client-side are allowed.
     * }
     */
    public function __construct($data = NULL) {
        \RoadRunner\Centrifugal\Proxy\DTO\V1\GPBMetadata\Proxy::initOnce();
        parent::__construct($data);
    }

    /**
     * Centrifugo always sends this within the first message upon user subscription request.
     * It's always not set in the following StreamRequest messages from Centrifugo.
     *
     * Generated from protobuf field <code>.centrifugal.centrifugo.proxy.SubscribeRequest subscribe_request = 1;</code>
     * @return \RoadRunner\Centrifugal\Proxy\DTO\V1\SubscribeRequest|null
     */
    public function getSubscribeRequest()
    {
        return $this->subscribe_request;
    }

    public function hasSubscribeRequest()
    {
        return isset($this->subscribe_request);
    }

    public function clearSubscribeRequest()
    {
        unset($this->subscribe_request);
    }

    /**
     * Centrifugo always sends this within the first message upon user subscription request.
     * It's always not set in the following StreamRequest messages from Centrifugo.
     *
     * Generated from protobuf field <code>.centrifugal.centrifugo.proxy.SubscribeRequest subscribe_request = 1;</code>
     * @param \RoadRunner\Centrifugal\Proxy\DTO\V1\SubscribeRequest $var
     * @return $this
     */
    public function setSubscribeRequest($var)
    {
        GPBUtil::checkMessage($var, \RoadRunner\Centrifugal\Proxy\DTO\V1\SubscribeRequest::class);
        $this->subscribe_request = $var;

        return $this;
    }

    /**
     * Publication may be set when client publishes to the on-demand stream. If you are using
     * bidirectional stream then Centrifugo assumes publications from client-side are allowed.
     *
     * Generated from protobuf field <code>.centrifugal.centrifugo.proxy.Publication publication = 2;</code>
     * @return \RoadRunner\Centrifugal\Proxy\DTO\V1\Publication|null
     */
    public function getPublication()
    {
        return $this->publication;
    }

    public function hasPublication()
    {
        return isset($this->publication);
    }

    public function clearPublication()
    {
        unset($this->publication);
    }

    /**
     * Publication may be set when client publishes to the on-demand stream. If you are using
     * bidirectional stream then Centrifugo assumes publications from client-side are allowed.
     *
     * Generated from protobuf field <code>.centrifugal.centrifugo.proxy.Publication publication = 2;</code>
     * @param \RoadRunner\Centrifugal\Proxy\DTO\V1\Publication $var
     * @return $this
     */
    public function setPublication($var)
    {
        GPBUtil::checkMessage($var, \RoadRunner\Centrifugal\Proxy\DTO\V1\Publication::class);
        $this->publication = $var;

        return $this;
    }

}

